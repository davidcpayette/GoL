<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>play = 0;
playing = false;
tick = false; 
changecase = false;
//display_set_gui_size(640,480);
holenum = 10;
play_hit = false;
stepped = false;
ticktock = 0;
guivalign = 640 - 56;
num_frames = 20;
playsprite = 1;
//object_list = array_create(0);
object_list[0] = noone;
object_num = array_create(0);
selector = 0;
obj = noone;
undolist = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tick = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(play == true)
{
tick = true;
alarm[1] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tick = false; //Initialize, to be sure tick doesn't happen more than one frame

//press up/down to make tick rate increase/decrease
if(keyboard_check_pressed(vk_up))// &amp;&amp; play == 0)
{
    if(num_frames &gt; 10){num_frames -= 10;}
} 
if(keyboard_check_pressed(vk_down))// &amp;&amp; play == 0)
{
    if(num_frames &lt; 30){num_frames += 10;}
}

//space bar to play, ticks at set intervals
if(keyboard_check_pressed(vk_space))
{
    if(play == 0) //if pressing space and not playing, play
    {
        play = 1;
        play_hit = true;
    }
    else if(play &gt; 0) //if pressing space and playing, pause
    {
        play = 0;
        tick = false;
    }   
}

if(play &gt; 1) //if playing, don't tick until... 
{
    tick = false;
    if(play &gt;= num_frames){play = 0;}
    play ++;
}

if(play == 1) //... play is 1
{
    play ++;
    tick = true;
}

//right arrow to step 1 frame at a time
if(keyboard_check_pressed(vk_right) &amp;&amp; play == 0)
{
    tick = true;   
    //stepped = true; 
    play_hit = true;
    //alarm[1] = 1;
}

//tab through objects to place in level
if(keyboard_check_pressed(vk_tab))
{   
    if(selector &lt; array_length_1d(object_list)-1)
    {
        selector++;
    }
    else
    {
        selector = 0;
    }
}

//place objects in level, only works for holes right now
if(mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(mouse_x,mouse_y,oPlacementAllow) &amp;&amp; play_hit = false &amp;&amp; object_num[selector]&gt;0)
{
    if(object_list[selector] != noone)
    {
        string_to_object(object_list[selector]); 
    }
    if(obj != noone)
    { 
        inst = instance_create(mouse_x, mouse_y,obj);
        with(inst)
        {
            move_snap(32,32);       
            inst = instance_place(x,y,oPlacementAllow);
            //with(inst){instance_destroy();}
        }
        undo[inst.x,inst.y] = selector;
        ds_list_add(undolist,inst);
        object_num[selector]--;
    }
}

//undo object placement
if(mouse_check_button_pressed(mb_right) &amp;&amp; ds_list_size(undolist)!=0)
{
    inst = ds_list_find_value(undolist,ds_list_size(undolist)-1);
    object_num[undo[inst.x,inst.y]]++;
    with(inst){instance_destroy();}
    ds_list_delete(undolist,ds_list_size(undolist)-1);
}

//advances subimage of the clock sprite
if(tick)
{    
    if(ticktock &lt; sprite_get_number(sTickClock) - 2)
    {
        ticktock++;
    }
    else
    {
        ticktock = 0;
    }
}
if(play == 0)
{
    ticktock = 4;
}

//switches subimage of play/pause sprite
playsprite = num_frames/10 - 1;   


//restart level with "r"
if(keyboard_check_pressed(ord('R'))){room_restart();}

//restart game with "esc"
if(keyboard_check_pressed(vk_escape)){game_restart();}

//level change
if(((play_hit &amp;&amp; !instance_exists(oMovingObject)) || keyboard_check_pressed(vk_rshift)) &amp;&amp; room != room_last){room_goto_next();}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr = noone;
draw_set_colour(c_navy);
draw_rectangle(640-112,0,640,480,false);
draw_set_colour(c_ltgray);
draw_rectangle(640-100,12,628,468,false);
draw_set_colour(c_black);

draw_sprite(sTickClock,ticktock,guivalign,32);
if(room != level0)
{    
    for(var i = 0; i &lt; array_length_1d(object_list); i++)
    {
        string_to_sprite(object_list[i]);
        draw_sprite(spr,0,guivalign,96+36*i);
    }
    for(var j = 0; j &lt; array_length_1d(object_num); j++)
    {
        draw_text(guivalign - 40,96 + 36*j,string(object_num[j]));
    }
    if(!play_hit){draw_sprite(sSelector,0,guivalign + 32,96+36*selector);}
    if(play_hit){draw_sprite(sLock,0,guivalign + 32,32);}
}
draw_sprite(sPlayPause,playsprite,guivalign - 32, 32);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
